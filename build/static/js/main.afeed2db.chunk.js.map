{"version":3,"sources":["components/Task/Todo.jsx","context/todoContext.js","components/Task/AddNewTask.jsx","components/Task/Todos.jsx","components/common/About.jsx","components/common/Nav.jsx","containers/App.js","reportWebVitals.js","containers/GlobalStates.jsx","index.js"],"names":["Todo","text","isCompleted","deleted","completed","className","onClick","TodoContext","createContext","todos","todo","handleCreateNewTodo","handleTodoInput","handleCompletedTodo","handleDeleteTodo","AddNewTask","context","useContext","onSubmit","e","preventDefault","type","placeholder","value","onChange","Todos","length","map","id","About","teachersName","href","withRouter","props","console","log","to","exact","activeClassName","activeStyle","backgroundColor","App","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStates","useState","getTodos","setTodos","getTodo","setTodo","Provider","uuidv4","push","event","target","todoIndex","findIndex","t","filteredTodos","filter","children","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.afeed2db.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nconst Todo = ({ text, isCompleted, deleted, completed }) => {\r\n    return (\r\n        <Fragment>\r\n            <div\r\n                className={`todo-indicator ${\r\n                    isCompleted ? \"bg-success\" : \"bg-warning\"\r\n                }`}\r\n            ></div>\r\n            <div className=\"widget-content p-0\">\r\n                <div className=\"widget-content-wrapper\">\r\n                    <div className=\"widget-content-right flex1\">\r\n                        <div className=\"widget-heading\">\r\n                            {isCompleted ? <del>{text}</del> : text}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"widget-content-left\">\r\n                        {\" \"}\r\n                        <button\r\n                            className=\"border-0 btn-transition btn btn-outline-success\"\r\n                            onClick={completed}\r\n                        >\r\n                            {\" \"}\r\n                            <i className=\"fa fa-check\"></i>\r\n                        </button>{\" \"}\r\n                        <button\r\n                            className=\"border-0 btn-transition btn btn-outline-danger\"\r\n                            onClick={deleted}\r\n                        >\r\n                            {\" \"}\r\n                            <i className=\"fa fa-trash\"></i>{\" \"}\r\n                        </button>{\" \"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n","import { createContext } from \"react\";\r\n\r\nconst TodoContext = createContext({\r\n    todos: [],\r\n    todo: \"\",\r\n    handleCreateNewTodo: () => {},\r\n    handleTodoInput: () => {},\r\n    handleCompletedTodo: () => {},\r\n    handleDeleteTodo: () => {}\r\n});\r\n\r\nexport default TodoContext;\r\n","import React, { useContext } from \"react\";\r\nimport TodoContext from \"./../../context/todoContext\";\r\n\r\nconst AddNewTask = () => {\r\n    const context = useContext(TodoContext);\r\n\r\n    return (\r\n        <div className=\"w-50 mx-auto fixed-bottom mb-5 p-3 wrapper\">\r\n            <form\r\n                className=\"form-inline justify-content-center\"\r\n                onSubmit={e => e.preventDefault()}\r\n            >\r\n                <div className=\"input-group w-100\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control rounded text-center\"\r\n                        placeholder=\"Add new Task\"\r\n                        value={context.todo}\r\n                        onChange={context.handleTodoInput}\r\n                    />\r\n                    <div className=\"input-group-prepend\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-sm bg-transparent fa fa-plus-square text-light\"\r\n                            onClick={context.handleCreateNewTodo}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewTask;\r\n","import React, { useContext } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport TodoContext from \"./../../context/todoContext\";\r\nimport AddNewTask from './AddNewTask';\r\n\r\nconst Todos = () => {\r\n    const context = useContext(TodoContext);\r\n    const { todos, handleDeleteTodo, handleCompletedTodo } = context;\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n            {todos.length > 0 ? (\r\n                todos.map(todo => (\r\n                    <li key={todo.id} className=\"list-group-item\">\r\n                        <Todo\r\n                            text={todo.text}\r\n                            isCompleted={todo.completed}\r\n                            deleted={() => handleDeleteTodo(todo.id)}\r\n                            completed={() => handleCompletedTodo(todo.id)}\r\n                        />\r\n                    </li>\r\n                ))\r\n            ) : (\r\n                <div className=\"alert alert-light mt-3 w-75 mx-auto\">\r\n                    <p className=\"text-center\">\r\n                    The List is empty  \r\n                    </p>\r\n                </div>\r\n            )}\r\n        <AddNewTask />\r\n        </ul>\r\n\r\n    );\r\n};\r\n\r\nexport default Todos;\r\n","import React from \"react\";\n\nconst About = ({ teachersName }) => {\n    return (\n        <div className=\"card text-center\">\n            <div className=\"card-header\">About Me</div>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Full-Stack MERN Developer</h5>\n                <p className=\"card-text\">Name&nbsp;: {teachersName}</p>\n                <a\n                    href=\"https://ciamacdavoudi.com/\"\n                    className=\"btn btn-success\"\n                >\n                   Go to the Website\n                </a>\n            </div>\n            <div className=\"card-footer text-muted\">\n                (:&nbsp;Happy Coding\n            </div>\n        </div>\n    );\n};\n\nexport default About;\n","import React from 'react';\nimport {Link, withRouter, NavLink} from \"react-router-dom\";\n\nexport default withRouter(function Nav(props) {\n    console.log(props)\n    return (\n        <div className=\"m-3\">\n            <ul className=\"nav nav-pills justify-content-center\">\n            <li className=\"nav-item\">\n                <NavLink to=\"/\"\n                // className={props.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}  <== I can use NavLink instead of this line and Nav tag!\n                className=\"nav-link\"\n                exact\n                activeClassName= \"active\"\n                activeStyle={{backgroundColor:\"green\"}}\n                 >\n                Routine Todos\n                </NavLink>\n            </li>\n\n            <li className=\"nav-item\">\n                <NavLink to=\"/about\" \n                // className={props.location.pathname === \"/about\" ? \"nav-link active\" : \"nav-link\"}   <== I can use NavLink instead of this line and Nav link!\n                className=\"nav-link\"\n                activeStyle={{backgroundColor:\"green\"}}\n                >\n                About Me\n                </NavLink>\n                </li>\n            </ul>\n        </div>\n    )\n}\n)","import React, {Fragment} from \"react\";\nimport Todos from \"../components/Task/Todos\";\nimport About from '../components/common/About';\nimport {Route, Switch} from \"react-router-dom\";\nimport Nav from '../components/common/Nav';\n\nconst App = () => {\n    return (\n        <Fragment>\n        <Nav />\n            <div className=\"d-flex justify-content-center container\">\n                <div className=\"col-md-8\">\n                    <div className=\"card-hover-shadow-2x mb-3 card\">\n                    <Switch>\n                    <Route path=\"/\" exact component={Todos} />\n                    <Route path=\"/about\" \n                    //component={About} \n                    render={()=>(\n                        <About teachersName=\"Ciamac\" />\n                )}\n                    />\n                    </Switch>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from 'react';\nimport TodoContext from '../context/todoContext';\nimport { v4 as uuidv4} from \"uuid\";\n\nexport default function GlobalStates(props) {\n    const [getTodos, setTodos] = useState([]);\n    const [getTodo, setTodo] = useState(\"\");\n    const handleCreateNewTodo = () => {\n        const todos = [...getTodos];\n        const todo = {\n            id: uuidv4(),\n            text: getTodo,\n            completed: false\n        };\n        if (getTodo !== \"\" && getTodo !== \" \") {\n            todos.push(todo);\n            setTodos(todos);\n            setTodo(\"\");\n        }\n    };\n\n    const handleCompletedTodo = id => {\n        const todos = [...getTodos];\n        const todoIndex = todos.findIndex(t => t.id === id);\n        const todo = todos[todoIndex];\n        todo.completed = !todo.completed;\n        todos[todoIndex] = todo;\n        setTodos(todos);\n    };\n\n    const handleDeleteTodo = id => {\n        const todos = [...getTodos];\n        const filteredTodos = todos.filter(t => t.id !== id);\n        setTodos(filteredTodos);\n    };\n\n    const handleTodoInput = event => {\n        setTodo(event.target.value);\n    };\n\n\n\n\n    return (\n        <div>\n        <TodoContext.Provider\n         value={{\n                todos: getTodos,\n                todo: getTodo,\n                handleCreateNewTodo: handleCreateNewTodo,\n                handleTodoInput: handleTodoInput,\n                handleCompletedTodo: handleCompletedTodo,\n                handleDeleteTodo: handleDeleteTodo\n            }}\n        >\n         {props.children}\n        </TodoContext.Provider>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport GlobalStates from './containers/GlobalStates';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <GlobalStates>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </GlobalStates>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}